@model IEnumerable<Domain.Models.Transaction>

@{
    ViewBag.Title = "Financial";
    //TODO - make this controller show neagtive for outgoing transactions
}

<h2>Transaction History</h2>
<h3>Your Worth: @string.Format("{0:C}", ViewBag.worth)</h3>

<table class="table table-bordered table-condensed table-hover">
    <tr>        
        <th>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TransactionType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            Details
        </th>
    </tr>
    @{ var sum = 0.00M; }
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.TimeStamp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TransactionType)
        </td>

        <td>
            @{
                var amount = item.Amount;                
                if (item.FromUser == User.Identity.Name)
                {
                    sum -= item.Amount;
                    amount *= -1.0M;
                }
                else
                {                    
                    sum += item.Amount;
                }
                @Html.Raw(string.Format("{0:C}", amount));
                }
        </td>
        <td>            
            @{
                if (item.FightListingID != null) 
                { 
                    @Html.ActionLink("Fight Listing", "Details", new { id = item.FightListingID , controller = "FightListings"})
                }
                else if(item.FighterID!=null)
                {
                    @Html.ActionLink("Fighter", "Details", new { controller = "fighters",ID=item.FighterID})
                }
             }
        </td>
    </tr>
}
    <tr>
        <td></td>
        <td>Total:</td>
        <td>@string.Format("{0:C}",sum)</td>
        <td></td>
    </tr>
</table>
